* Cluster Admin Authentication

#+begin_src bash
oc explain Role
#+end_src

#+begin_example
# KIND:     Role
# VERSION:  rbac.authorization.k8s.io/v1
# 
# DESCRIPTION:
#      Role is a namespaced, logical grouping of PolicyRules that can be
#      referenced as a unit by a RoleBinding.
# 
# FIELDS:
#    apiVersion	<string>
#      APIVersion defines the versioned schema of this representation of an
#      object. Servers should convert recognized schemas to the latest internal
#      value, and may reject unrecognized values. More info:
#      https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
# 
#    kind	<string>
#      Kind is a string value representing the REST resource this object
#      represents. Servers may infer this from the endpoint the client submits
#      requests to. Cannot be updated. In CamelCase. More info:
#      https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
# 
#    metadata	<Object>
#      Standard object's metadata.
# 
#    rules	<[]Object>
#      Rules holds all the PolicyRules for this Role
#+end_example
#+begin_src bash
oc explain ClusterRole
#+end_src

#+begin_example
# KIND:     ClusterRole
# VERSION:  rbac.authorization.k8s.io/v1
# 
# DESCRIPTION:
#      ClusterRole is a cluster level, logical grouping of PolicyRules that can be
#      referenced as a unit by a RoleBinding or ClusterRoleBinding.
# 
# FIELDS:
#    aggregationRule	<Object>
#      AggregationRule is an optional field that describes how to build the Rules
#      for this ClusterRole. If AggregationRule is set, then the Rules are
#      controller managed and direct changes to Rules will be stomped by the
#      controller.
# 
#    apiVersion	<string>
#      APIVersion defines the versioned schema of this representation of an
#      object. Servers should convert recognized schemas to the latest internal
#      value, and may reject unrecognized values. More info:
#      https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
# 
#    kind	<string>
#      Kind is a string value representing the REST resource this object
#      represents. Servers may infer this from the endpoint the client submits
#      requests to. Cannot be updated. In CamelCase. More info:
#      https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
# 
#    metadata	<Object>
#      Standard object's metadata.
# 
#    rules	<[]Object>
#      Rules holds all the PolicyRules for this ClusterRole
# 
#+end_example
#+begin_src bash
oc explain RoleBinding

#+begin_example
# KIND:     RoleBinding
# VERSION:  rbac.authorization.k8s.io/v1
# 
# DESCRIPTION:
#      RoleBinding references a role, but does not contain it. It can reference a
#      Role in the same namespace or a ClusterRole in the global namespace. It
#      adds who information via Subjects and namespace information by which
#      namespace it exists in. RoleBindings in a given namespace only have effect
#      in that namespace.
# 
# FIELDS:
#    apiVersion	<string>
#      APIVersion defines the versioned schema of this representation of an
#      object. Servers should convert recognized schemas to the latest internal
#      value, and may reject unrecognized values. More info:
#      https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
# 
#    kind	<string>
#      Kind is a string value representing the REST resource this object
#      represents. Servers may infer this from the endpoint the client submits
#      requests to. Cannot be updated. In CamelCase. More info:
#      https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
# 
#    metadata	<Object>
#      Standard object's metadata.
# 
#    roleRef	<Object> -required-
#      RoleRef can reference a Role in the current namespace or a ClusterRole in
#      the global namespace. If the RoleRef cannot be resolved, the Authorizer
#      must return an error.
# 
#    subjects	<[]Object>
#      Subjects holds references to the objects the role applies to.
# 
#+end_example

